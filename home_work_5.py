# Домашнее задание Семинар 5* (сдавать только к семинару 5!)

# Задача 26:  
# Напишите программу, которая на вход принимает два числа A и B, и возводит число А в целую степень B с помощью рекурсии.

def my_pow(a, b):
    if b >= 0:
        if b == 0:
            return 1
        if b == 1:
            return a
        return a * my_pow(a, b - 1)
    if b < 0:
        if a == 0:
            return '0 в отрицательной степени = неопределенность (1 / 0)'
        if b == 0:
            return 1
        if b == -1:
            return 1 / a
        return (1 / a) * my_pow(a, b + 1)

while True:
    try:
        A = int(input('Введите целое число для возведения степень >>> '))
        B = int(input('Введите степень (целое число), в которую нужно возвести число >>> '))
        break
    except:
        print('Вы ввели некорректное значение, необходимо ввести целые числа')

print(my_pow(A, B))


# Задача 28:
# Напишите рекурсивную функцию sum(a, b), возвращающую сумму двух целых неотрицательных чисел. Из всех арифметических операций допускаются только +1 и -1. Также нельзя использовать циклы.

# Задачи на повторение по материалам предыдущих семинаров (по желанию)
# Задача 101 Вычислить число π c заданной точностью d

# Пример: 
# при d = 0.001, π = 3.141    0.1 ≤ d ≤ 0.00000000001
# Задача 102 Задайте натуральное число N. Напишите программу, которая составит список простых множителей числа N.

# Задача 103 Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от 0 до 100) многочлена и записать в файл file1.txt многочлен степени k.

# Пример:  k=2 

# Возможные варианты многочленов:
# 2*x*x + 4*x + 5 = 0 
# x*x + 5 = 0 
# 10*x*x = 0
# Задача 104. Даны два файла file1.txt и file2.txt, в каждом из которых находится запись многочлена (полученные в результате работы программы из задачи 103). Необходимо сформировать файл file_sum.txt, содержащий сумму многочленов.

# Задача 105 Напишите программу, удаляющую из текста все слова, содержащие ""абв"".

# Задача 106 Создайте программу для игры с конфетами человек против человека.
# Условие задачи: На столе лежит 2021 конфета. Играют два игрока делая ход друг после друга. Первый ход определяется жеребьёвкой. За один ход можно забрать не более чем 28 конфет. Все конфеты оппонента достаются сделавшему последний ход. Сколько конфет нужно взять первому игроку, чтобы забрать все конфеты у своего конкурента? (Добавьте игру против бота)

# Задача 107 Создайте программу для игры в ""Крестики-нолики"" (Добавьте игру против бота)

# Задача 108 Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных (модуль в отдельном файле, импортируется как библиотека)
# метод Упаковка: на вход подается текстовый файл, на выходе текстовый файл со сжатием.
# метод Распаковка: на вход подается сжатый текстовый файл, на выходе текстовый файл восстановленный.
# Прикинуть достигаемую степень сжатия (отношение количества байт сжатого к исходному).